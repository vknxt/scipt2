--[[
    ╔═╗╔═╗╔═══╗───────╔═══╗╔═══╗╔═══╗╔╗───╔═══╗
    ║║╚╝║║║╔═╗║───────║╔═╗║║╔═╗║║╔═╗║║║───║╔═╗║
    ║╔╗╔╗║║║─║║╔══╗───║║─╚╝║║─║║║║─║║║║───║║─║║
    ║║║║║║║╚═╝║╚═╗║───║║─╔╗║╚═╝║║╚═╝║║║─╔╗║╚═╝║
    ║║║║║║║╔═╗║╔═╝║───║╚═╝║║╔═╗║║╔═╗║║╚═╝║║╔═╗║
    ╚╝╚╝╚╝╚╝─╚╝╚══╝───╚═══╝╚╝─╚╝╚╝─╚╝╚═══╝╚╝─╚╝
    
    CPX Script v3.0.0
]]

-- Esperar o jogo carregar
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Prevenir execução múltipla
if getgenv().PremiumLoaded then return end
getgenv().PremiumLoaded = true

-- Serviços do Roblox
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Carregar a biblioteca de UI (Orion Library)
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Configurações do script
local Config = {
    ESP = {
        Enabled = false,
        BoxEnabled = true,
        NameEnabled = true,
        HealthEnabled = true,
        DistanceEnabled = true,
        BoxColor = Color3.fromRGB(255, 0, 0),
        TextColor = Color3.fromRGB(255, 255, 255)
    },
    Aimbot = {
        Enabled = false,
        TeamCheck = true,
        Smoothness = 0.5,
        AimPart = "Head",
        FOVSize = 100,
        ToggleKey = Enum.KeyCode.RightMouse
    }
}

-- Criar a janela principal da UI
local Window = OrionLib:MakeWindow({
    Name = "CPX Script", 
    HidePremium = true,
    SaveConfig = true, 
    ConfigFolder = "CPXScript"
})

-- Criar abas na UI
local CombatTab = Window:MakeTab({
    Name = "Combat",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local VisualsTab = Window:MakeTab({
    Name = "Visuals",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SettingsTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Seção de Aimbot
local AimbotSection = CombatTab:AddSection({
    Name = "Aimbot"
})

AimbotSection:AddToggle({
    Name = "Enable Aimbot",
    Default = false,
    Save = true,
    Flag = "aimbotEnabled",
    Callback = function(Value)
        Config.Aimbot.Enabled = Value
    end    
})

AimbotSection:AddToggle({
    Name = "Team Check",
    Default = true,
    Save = true,
    Flag = "teamCheck",
    Callback = function(Value)
        Config.Aimbot.TeamCheck = Value
    end    
})

AimbotSection:AddSlider({
    Name = "Smoothness",
    Min = 1,
    Max = 100,
    Default = 50,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Save = true,
    Flag = "aimbotSmoothness",
    Callback = function(Value)
        Config.Aimbot.Smoothness = Value / 100
    end    
})

AimbotSection:AddDropdown({
    Name = "Aim Part",
    Default = "Head",
    Options = {"Head", "UpperTorso", "HumanoidRootPart"},
    Save = true,
    Flag = "aimPart",
    Callback = function(Value)
        Config.Aimbot.AimPart = Value
    end    
})

-- Seção de ESP
local ESPSection = VisualsTab:AddSection({
    Name = "ESP"
})

ESPSection:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Save = true,
    Flag = "espEnabled",
    Callback = function(Value)
        Config.ESP.Enabled = Value
    end    
})

ESPSection:AddToggle({
    Name = "Box ESP",
    Default = true,
    Save = true,
    Flag = "boxEnabled",
    Callback = function(Value)
        Config.ESP.BoxEnabled = Value
    end    
})

ESPSection:AddToggle({
    Name = "Name ESP",
    Default = true,
    Save = true,
    Flag = "nameEnabled",
    Callback = function(Value)
        Config.ESP.NameEnabled = Value
    end    
})

ESPSection:AddToggle({
    Name = "Health ESP",
    Default = true,
    Save = true,
    Flag = "healthEnabled",
    Callback = function(Value)
        Config.ESP.HealthEnabled = Value
    end    
})

ESPSection:AddColorpicker({
    Name = "ESP Color",
    Default = Color3.fromRGB(255, 0, 0),
    Save = true,
    Flag = "espColor",
    Callback = function(Value)
        Config.ESP.BoxColor = Value
    end  
})

-- Seção de Configurações
local SettingsSection = SettingsTab:AddSection({
    Name = "Settings"
})

SettingsSection:AddKeybind({
    Name = "Toggle UI",
    Default = Enum.KeyCode.RightShift,
    Hold = false,
    Save = true,
    Flag = "toggleUI",
    Callback = function()
        OrionLib:ToggleUI()
    end    
})

-- Funções Utilitárias
local function GetDistance(position)
    local character = LocalPlayer.Character
    if not character then return 0 end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return 0 end
    return (position - humanoidRootPart.Position).Magnitude
end

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = Config.Aimbot.FOVSize

    for _, player in pairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        if Config.Aimbot.TeamCheck and player.Team == LocalPlayer.Team then continue end
        
        local character = player.Character
        if not character then continue end
        
        local humanoid = character:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end
        
        local part = character:FindFirstChild(Config.Aimbot.AimPart)
        if not part then continue end
        
        local pos, onScreen = Camera:WorldToViewportPoint(part.Position)
        if not onScreen then continue end
        
        local distance = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)).Magnitude
        if distance < shortestDistance then
            closestPlayer = player
            shortestDistance = distance
        end
    end
    
    return closestPlayer
end

-- Loop Principal
RunService.RenderStepped:Connect(function()
    if Config.Aimbot.Enabled and UserInputService:IsKeyDown(Config.Aimbot.ToggleKey) then
        local target = GetClosestPlayer()
        if target then
            local character = target.Character
            local part = character:FindFirstChild(Config.Aimbot.AimPart)
            if part then
                local pos = Camera:WorldToViewportPoint(part.Position)
                local targetPos = Vector2.new(pos.X, pos.Y)
                local mousePos = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
                mousemoverel(
                    (targetPos.X - mousePos.X) * Config.Aimbot.Smoothness,
                    (targetPos.Y - mousePos.Y) * Config.Aimbot.Smoothness
                )
            end
        end
    end
end)

-- Inicialização da UI
OrionLib:Init()

-- Notificação inicial
OrionLib:MakeNotification({
    Name = "Script Loaded",
    Content = "CPX Script v3.0.0 loaded successfully!",
    Image = "rbxassetid://4483345998",
    Time = 5
}) 
